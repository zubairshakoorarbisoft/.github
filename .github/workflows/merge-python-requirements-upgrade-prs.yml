# This file contains a workflow which will be run on schedule every day, 
# or can be call from other workflows and
# will collect all the eligible (PRs which are labelled "Ready to merge" by our 
# script) python upgrade PRs from openedx or edx org.
# After fetching all PRs, it will check if all the checks passing on the PR, if yes
# then it will merge that PR, otherwise it will fail.

name: Merge Python Requirements Upgrade PRs

on:
  schedule:
    # will run the job at 10 AM every day (UTC),
    # https://crontab.guru/#0_10_*_*_*
    - cron: "0 10 * * *"
  workflow_call:
    inputs:
      ORG_NAME:
        description: "Organisation name to merge PRs for, default openedx"
        type: string
        default: "openedx"
  workflow_dispatch:

jobs:
  get_list_of_prs:
    name: Get list of PRs
    runs-on: ubuntu-20.04
    outputs:
      urls: ${{ steps.generate_urls.outputs.urls }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install requests

      - name: Get urls of all eligible prs
        env:
          GIT_TOKEN: ${{ secrets.requirements_bot_github_token }}
        id: generate_urls
        run: |
          echo "urls=$(python scripts/get_ready_to_merge_prs.py openedx)" >> $GITHUB_OUTPUT
      - name: Print URLs
        run: echo ${{ needs.get_list_of_prs.outputs.urls }}

  merge_pr:
    runs-on: ubuntu-20.04
    needs:
      - get_list_of_prs
    if: ${{ bool(needs.get_list_of_prs.outputs.urls) }} # Skip if there are no URLs found
    strategy:
      fail-fast: false
      matrix:
        url: ${{ fromJSON(needs.get_list_of_prs.outputs.urls) }}

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'